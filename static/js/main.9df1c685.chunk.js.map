{"version":3,"sources":["deck.png","components/Song.js","components/Player.js","logo.png","components/Nav.js","components/MusicLibrarySong.js","components/MusicLibrary.js","musicData.js","App.js","index.js"],"names":["Song","currentSong","isPlaying","className","name","artist","src","Deck","alt","cover","title","Player","songs","setSongs","setCurrentSong","setIsPlaying","songTime","setSongTime","audioRef","activeLibraryHandler","nextPrev","activeSong","map","song","id","active","playPromise","current","play","undefined","then","audio","getTime","time","minutes","Math","floor","seconds","secondsWithZero","String","padStart","skipTrackHandler","direction","a","currentIndex","findIndex","length","trackAnimation","transform","animationPercentage","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faBackward","pause","faPauseCircle","faPlayCircle","faForward","Nav","libraryStatus","setLibraryStatus","logo","faCompactDisc","MusicLibrarySong","MusicLibrary","musicData","uuidv4","App","useRef","useState","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndedHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9df1c685.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/deck.c3573cc7.png\";","// img\r\nimport Deck from \"../deck.png\";\r\n\r\nconst Song = ({ currentSong, isPlaying }) => {\r\n    return (\r\n        <div className=\"song\">\r\n            <div className=\"song__data\">\r\n                <p>\"{currentSong.name}\"</p>\r\n                <p>{currentSong.artist}</p>\r\n            </div>\r\n\r\n            <div className=\"song__img\">\r\n                <img className=\"song__img--deck\" src={Deck} alt=\"turntable\" />\r\n                <img className= {`song__img--cover ${isPlaying ? \"rotate\" : \"\"}`} src={currentSong.cover} alt={currentSong.title} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Song;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlayCircle, faPauseCircle, faForward, faBackward } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Player = ({ songs, setSongs, currentSong, setCurrentSong, isPlaying, setIsPlaying, songTime, setSongTime, audioRef }) => {\r\n    // Add active state to animete selected song \r\n    const activeLibraryHandler = (nextPrev) => {\r\n        const activeSong = songs.map((song) => {\r\n            if(song.id === nextPrev.id) {\r\n                return {\r\n                    ...song,\r\n                    active: true,\r\n                }\r\n            } else {\r\n                    return {\r\n                        ...song,\r\n                        active: false,\r\n                    }\r\n                }\r\n        });\r\n        setSongs(activeSong);\r\n    }\r\n\r\n    if(isPlaying) {\r\n        const playPromise = audioRef.current.play()\r\n        if(playPromise !== undefined) {\r\n            playPromise.then((audio) => {\r\n                audioRef.current.play()\r\n            })\r\n        }\r\n    }\r\n    \r\n    // Play or pause\r\n    const playHandler = () => {\r\n        isPlaying ? audioRef.current.pause() : audioRef.current.play();\r\n        setIsPlaying(!isPlaying);\r\n    };\r\n  \r\n    // Display time in easier way\r\n    const getTime = time => {\r\n        const minutes = Math.floor(time / 60);\r\n        const seconds = Math.floor(time % 60);\r\n        const secondsWithZero = String(seconds).padStart(2, \"0\");\r\n        return `${minutes}:${secondsWithZero}`;\r\n    };\r\n\r\n    // Drag the input range\r\n    const dragHandler = e => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongTime({\r\n            ...songTime,\r\n            currentTime: e.target.value\r\n        })\r\n    };\r\n\r\n    // Skip Back and Forward\r\n    const skipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n\r\n        if(direction === 'skip-forward') {\r\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n        }\r\n        if(direction === 'skip-back') {\r\n            if(currentIndex === 0) {\r\n                await setCurrentSong(songs[songs.length -1]);\r\n                activeLibraryHandler(songs[songs.length -1]);\r\n\r\n            } else {\r\n                await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n                activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n            }\r\n        }\r\n    };\r\n\r\n    // add the styles to input range\r\n    const trackAnimation = {\r\n        transform: `translateX(${songTime.animationPercentage}%)`\r\n    };\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div  className=\"player--time-control\">\r\n                <p>{getTime(songTime.currentTime)}</p>\r\n\r\n                <div style={{ background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})` }} className=\"track\">\r\n                    <input\r\n                        min={0}\r\n                        max={songTime.duration || 0}\r\n                        value={songTime.currentTime}\r\n                        onChange={dragHandler}\r\n                        type=\"range\" />\r\n                    <div style={trackAnimation} className='animate-track'></div>\r\n                </div>\r\n\r\n                <p>{getTime(songTime.duration || 0)}</p>\r\n               \r\n            </div>\r\n\r\n            <div className=\"player--controllers\">\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} size=\"2x\" icon={faBackward} />\r\n                <FontAwesomeIcon onClick={playHandler} size=\"2x\" icon={isPlaying ? faPauseCircle : faPlayCircle} />\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} size=\"2x\" icon={faForward} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Player;","export default __webpack_public_path__ + \"static/media/logo.4c9dc684.png\";","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faCompactDisc } from \"@fortawesome/free-solid-svg-icons\";\r\nimport logo from \"../logo.png\";\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\r\n    return (\r\n        <nav>\r\n            <div className='logo'>   \r\n                 <img src={logo} alt=\"FOXdesign logo\" />\r\n            </div>\r\n           \r\n            <button onClick={() => setLibraryStatus(!libraryStatus)} > \r\n                <span>PLAYLIST </span><FontAwesomeIcon icon={faCompactDisc} size=\"2x\" />\r\n            </button>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Nav;","// import { faSmog } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst MusicLibrarySong = ({ song, songs, id, setCurrentSong, audioRef, isPlaying, setSongs }) => {\r\n    // select the song\r\n    const songSelectHandler = () => {\r\n        setCurrentSong(song);\r\n    \r\n    // Add active state to animete selected song \r\n    const activeSong = songs.map((song) => {\r\n        if(song.id === id) {\r\n            return {\r\n                ...song,\r\n                active: true,\r\n            }\r\n        } else {\r\n                return {\r\n                    ...song,\r\n                    active: false,\r\n                }\r\n            }\r\n    });\r\n    setSongs(activeSong);\r\n\r\n    if (isPlaying) {\r\n        const playPromise = audioRef.current.play();\r\n        playPromise.then((audio) => {\r\n            audioRef.current.play();\r\n        })\r\n    }\r\n}\r\n\r\n    return (\r\n        <div onClick={songSelectHandler} className={`music-library-song ${song.active ? 'selected' : ''}`}>\r\n            <img src={song.cover} alt={song.title} />\r\n            <div className=\"music-library-song__data\">\r\n                <p>{song.artist}</p>\r\n                <p>\"{song.name}\"</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MusicLibrarySong;","import MusicLibrarySong from \"./MusicLibrarySong\";\r\n\r\nconst MusicLibrary = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\r\n    return (\r\n        <div className= {`music-library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n            <div className=\"music-library-songs\">\r\n                <h2>PLAYLIST</h2>\r\n                {songs.map(song => (\r\n                    <MusicLibrarySong\r\n                        songs={songs}\r\n                        song={song}\r\n                        setCurrentSong={setCurrentSong}\r\n                        key={song.id}\r\n                        id={song.id}\r\n                        audioRef={audioRef}\r\n                        isPlaying={isPlaying}\r\n                        setSongs={setSongs}\r\n                    />))}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default MusicLibrary;","import { v4 as uuidv4 } from \"uuid\";\r\nfunction musicData() {\r\n    return [\r\n        {\r\n            name: \"Velocities\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/9e04907d0cf68c974c4a5f530b082a8d83a2d41f-1024x1024.jpg\",\r\n            artist: \"Sleepy Fish\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=7988\",\r\n            color: [\"#C9E7ED\", \"#FCF4CF\"],\r\n            id: uuidv4(),\r\n            active: true,\r\n        },\r\n        {\r\n            name: \"Glory Days\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/08/63d2d2cdabbc5df023603b5f47b2fb97963cb537-1024x1024.jpg\",\r\n            artist: \"Sitting Duck, Hoffy Beats\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=7981\",\r\n            color: [\"#6A9D94\", \"#4D5B41\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Vibe Vibe\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/08/7ba352cafecae63aa3f09a52e125ea615d2c1f9b-1024x1024.jpg\",\r\n            artist: \"Moods, Yasper\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10002\",\r\n            color: [\"#C8EFFE\", \"#AE8F38\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Keep Going\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n            color: [\"#CD607D\", \"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Where We Met\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/06/faa452681fe33146c42a1b422fdf7cd7fd082637-1024x1024.jpg\",\r\n            artist: \"xander\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9203\",\r\n            color: [\"#902E36\", \"#5B3655\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n     \r\n        {\r\n            name: \"Far Away\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/bc9a7af2ad67de703541c2c7a91e3df74ab494c0-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=7951\",\r\n            color: [\"#D7878D\", \"#3B4E5D\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        //ADD MORE HERE\r\n    ];\r\n}\r\n\r\nexport default musicData;","import React, { useRef, useState } from 'react';\n\n// components\nimport Song from './components/Song';\nimport Player from './components/Player';\nimport Nav from './components/Nav';\nimport MusicLibrary from './components/MusicLibrary';\n// style\nimport './styles/app.scss';\n\n// Music data\nimport musicData from './musicData';\n\nfunction App() {\n  // useRef\n  const audioRef = useRef(null);\n  // State\n  const [songs, setSongs] = useState(musicData());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songTime, setSongTime] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  \n  // Current song time\n  const timeUpdateHandler = (e) => {\n      const current = e.target.currentTime;\n      const duration = e.target.duration;\n      // Calculate % to input range\n      const roundedCurrent = Math.round(current);\n      const roundedDuration = Math.round(duration);\n      const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n\n      setSongTime({\n          ...songTime,\n          currentTime: current,\n          duration,\n          animationPercentage: animation\n      })\n  };\n\n  const songEndedHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  }\n\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : ''}`}>\n      <Nav \n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n      />\n      <Song \n        currentSong={currentSong}\n        isPlaying={isPlaying} />\n      <Player\n        audioRef={audioRef}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        songTime={songTime}\n        setSongTime={setSongTime}\n        songs={songs}\n        setSongs={setSongs}\n        />\n      <MusicLibrary\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong} \n        isPlaying={isPlaying} \n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n        />\n      <audio \n          onTimeUpdate={timeUpdateHandler} \n          onLoadedMetadata={timeUpdateHandler}\n          ref={audioRef} \n          src={currentSong.audio}\n          onEnded={songEndedHandler}>\n      </audio>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}